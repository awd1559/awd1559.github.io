---
layout:     post
title:      "register"
subtitle:   " \"i386 register\""
date:       2014-06-09 12:00:00
author:     "awd"
header-img: "img/post-bg-2015.jpg"
tags:
    - linux kernel
---
gdt和idt
==================================================
1、每一项为8字节
2、最多有8K个描述符，即最大为64K
   因为选择子是16位的(其中13位可用)，最多只能指到2*13 = 8192项描述符
3、i386最多有256个中断和异常，所以idt最大为8*256=2K
4、系统只有一个gdt，一个idt
5、GDTR：指出gdt的基址
6、IDTR：指出idt的基址

ldtr和tr
==================================================
ldtr和tr中的只是16位的选择子
ldtr从gdt中选择相应的项作为当前进程的ldt的起始地址
tr从gdt中选择相应的项作为当前进程的tss




efalg中的vm位只能在保护方式下由32位的iret指令(若当前的特权级=0)
或在任何特权级下由任务切换设置。


控制寄存器
cr0：机器控制状态位
cr1：保留
cr2：页故障线性地址
cr3：页目录表基地址

PL：特权级，共4个特权级，较高的特权级在数字上小于较低的特权级
RPL：请求特权级，由选择子的最低两位确定
DPL：描述符特权级，一个任务能够访问该描述符(及与该描述符相联系的段)的最低特权级
CPL：当前特权级，当前正在执行的任务的特权级，等于正被执行的代码段的特权级，cs的最低两位
EPL:有效特权级，RPL和CPL中较低的特权级

一个段选择子装入cs寄存器即发生控制转移：
若控制转移从低特权级到高特权级，必须通过门
若jmp指令产生段间转移，只能在同一特权级的段间跳转
若call指令，可在同一特权级的段间，也可到高特权级(通过门)段间跳转
同一任务内处理的中断，规则与call相同
任务CPL与引用门的选择子的RPL必须同时小于等于DPL

任务切换可又Call，Jmp或Int指令完成

中断和异常(包括软件中断指令)也都要保存断电，而且要保存标志寄存器，如果在用户程序中发生中断和异常，则发生特权变化，所以也要保
存用户级的堆栈指针




控制转移的详细过程
1、用jmp指令转移到同一特权级
2、