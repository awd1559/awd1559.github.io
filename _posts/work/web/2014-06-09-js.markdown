---
layout:     post
title:      "javascript"
subtitle:   " \"javascript\""
date:       2014-06-09 12:00:00
author:     "awd"
header-img: "img/post-bg-2015.jpg"
tags:
    - web
---

# framework

# [angularjs](https://angularjs.org/)
[source code on github](https://github.com/angular/angular.js)<br>
[angular.io](https://github.com/angular/angular.io) site for Angular 2 documentation<br>
[doc](http://docs.angularjs.cn/api)<br>

#### Angularjs in webstorm

```
create angularjs project
bower install
add configuration as nodejs
set work directory path
Live Edit -> launch , and set default index.html path
debug at random port
```


#### basic

```
var app = angular.module('app', ['ngRoute']);
var app = angular.module('app', []).run(function($rootScope) {$rootScope.name = "wwww";});
<div ng-app="app">
  <h1>name: {{ name }}</h1>
</div>

app.controller("HelloController", ['$scope', '$http', function($scope, $http){
    $http.get('http://rest-service.guides.spring.io/greeting')
        .success(function(data) {
            $scope.greeting = data;
        });
    $scope.counter = 0;
    $scope.add = function(amount) { $scrope.conter += amount; };
}]);

```


```
<html ng-app="app">
  <body>
    <div ng-controller="HelloController">
      <p>The ID is {{ greeting.id }}</p>
      <p>The content is {{ greeting.content }}</p>
      <button ng-click="add(1)" class="button">Add</button>
    </div>
    <div>
    	<input ng-model="person.name" type="text" placeholder="name">
    	<h1>Hello, {{ person.name }}</h1>
    </div>
    <script src="angular.js"></script>
    <script src="app.js"></script>
  </body>
</html>
```



```
<div ng-controller="MyController">
  <input ng-model="expr" type="text" placeholder="enter an expression" />
  <h2>{{ parseValue }}</h2>
</div>
```

```
app.controller('MyController', function($scope, $parse){
	$scope.$watch('expr', function(newVal, oldVal, scope){
	  if (newValue !== oldValue) {
        var parseFun = $parse(newVal);
        $scope.parsedValue = parseFun(scope);
	  }
	});
});
```




#### factory

```
angular.module('app.services')
.factory('User', function($http) { // injectables go here
  var backendUrl = "http://localhost:3000";  var service = {    // our factory definition
    user: {},
    setName: function(newName) { 
      service.user['name'] = newName; 
    },
    setEmail: function(newEmail) {
      service.user['email'] = newEmail;
    },
    save: function() {
      return $http.post(backendUrl + '/users', {
        user: service.user
      });
    }
  };  return service;
});
```

#### service

```
angular.module('app.services')
.service('User', function($http) { // injectables go here
  var self = this; // Save reference
  this.user = {};
  this.backendUrl = "http://localhost:3000";
  this.setName = function(newName) {
    self.user['name'] = newName;
  }
  this.setEmail = function(newEmail) {
    self.user['email'] = newEmail;
  }
  this.save = function() {
    return $http.post(self.backendUrl + '/users', {
      user: self.user
    })
  }
});

angular.module('app')
.controller('MainCtrl', function($scope, User) {
  $scope.saveUser = User.save;
});
```



##### provider

```
angular.module('app.services')
.provider('User', function() {
  this.backendUrl = "http://localhost:3000";
  this.setBackendUrl = function(newUrl) {
    if (url) this.backendUrl = newUrl;
  }
  this.$get = function($http) { // injectables go here
    var self = this;
    var service = {
      user: {},
      setName: function(newName) {
        service.user['name'] = newName;
      },
      setEmail: function(newEmail) {
        service.user['email'] = newEmail;
      },
      save: function() {
        return $http.post(self.backendUrl + '/users', {
          user: service.user
        })
      }
    };
    return service;
  }
});

angular.module('myApp')
.config(function(UserProvider) {
  UserProvider.setBackendUrl("http://myApiBackend.com/api");
})
```


# [backbone](http://backbonejs.org/)
[source code on github](https://github.com/jashkenas/backbone)<br>

# [emberjs](http://emberjs.com/)
[source code on github](https://github.com/emberjs/ember.js)<br>

# [jquery](https://jquery.com/)
[source code on github](https://github.com/jquery/jquery)<br>

# [meteor](https://www.meteor.com/)
[source code on github](https://github.com/meteor/meteor/)<br>

	//install
	curl https://install.meteor.com | /bin/sh
	//create project
	meteor create <name>
	meteor add tabs:bootstrap

# [ionic2](http://ionicframework.com)
[github](https://github.com/driftyco/ionic)

	Apache cordova: <br>
	javascript api to access device's camera, mic, etc
	use Angularjs<br>
	support html5, iOS 8, Android 4.1, Windows 10<br>

```
#install 
npm install -g cordova ionic

#创建项目
ionic start myApp
ionic start myApp blank
ionic start myApp tabs
ionic start myApp sidemenu

cd myApp
ionic platform add ios
ionic build ios
ionic emulate ios

ionic platform add android
ionic build android
ionic emulate android
```


# [react](https://facebook.github.io/react/)
[source code on github](https://github.com/facebook/react)

# [spine](http://spinejs.com/)
[source code on github](https://github.com/spine)

	Lightweight MVC library


# [egret](http://www.egret.com/)
[source code on github](https://github.com/egret-labs)
html5 game engine
创建项目
egret create HelloWorld
创建HelloWorld目录到当前目录

编译项目
egret build HelloWorld
编译HelloWorld目录中的项目

运行项目
egret startserver HelloWorld
自动打开http://localhost:3000/HelloWorld/launcher/index.html

将bin-debug、launcher、resources文件夹HTTP服务器的根目录下即可运行

使用WebStore作为IDE，打开目录即可编辑TypeScript

# library

#### [moment](http://momentjs.com/)
[source code on github](https://github.com/moment/moment/)
	Parse, validate, manipulate, and display dates in JavaScript

#### [PhotoSwipe](http://photoswipe.com/)
[source code on github](https://github.com/dimsemenov/PhotoSwipe)

#### [raphael](http://raphaeljs.com/)
[source code on github](https://github.com/DmitryBaranovskiy/raphael)

	Vector Library

#### [threejs](http://threejs.org/)
[source code on github](https://github.com/mrdoob/three.js/)

	javascript 3d library

#### [video-js](http://videojs.com/)
[source code on github](https://github.com/videojs/video.js)
	the html5 player framework

#### [d3](https://d3js.org/)
[source code on github](https://github.com/mbostock/d3)

	data chart

#### [DataTables](https://datatables.net/)



＃ 语法

#### 函数

```
//js
var square = function(x) {
  return x * x;
};

//coffee 
square = (x) -> x * x
change = -> "ok"

//js
var cube = function(x) {
  return square(x) * x;
};

//coffee
cube   = (x) -> square(x) * x

//js
var fill = function(container, liquid= "coffee") {
	return "Filling the " + container + " with " + liquid + "...";
};

//coffee
fill = (container, liquid = "coffee") ->
  "Filling the #{container} with #{liquid}..."

```

#### object array

```
//js
var song = ["do", "re", "mi", "fa", "so"];

var singers = {
  Jagger: "Rock",
  Elvis: "Roll"
};


var kids = {
  brother: {
    name: "Max",
    age: 11
  },
  sister: {
    name: "Ida",
    age: 9
  }
};

//coffee
//do not need var 
kids =
  brother:
    name: "Max"
    age:  11
  sister:
    name: "Ida"
    age:  9
```

#### if, else, unless

```
//js
if (happy && sad)
if (happy || sad)

//coffee
if happty and sad
if happy or sad
```


#### 循环与推导

```
//js
var foods = ['toast', 'cheese', 'wine']
for (var i = 0, var len = foods.length; i < len; i++) {
  food = foods[i];
  eat(food);
}

//coffee
eat food for food in ['toast', 'cheese', 'wine']

//js
var courses = ['greens', 'caviar', 'truffles', 'roast', 'cake'];
var i,j,len
for (i = j = 0, len = courses.length; j < len; i = ++j) {
  dish = courses[i];
  menu(i + 1, dish);
}

//coffee
courses = ['greens', 'caviar', 'truffles', 'roast', 'cake']
menu i + 1, dish for dish, i in courses

//coffee
foods = ['broccoli', 'spinach', 'chocolate']
eat food for food in foods when food isnt 'chocolate'

//coffee
evens = (x for x in [0..10] by 2)

yearsOld = max: 10, ida: 9, tim: 11

ages = for child, age of yearsOld
  "#{child} is #{age}"


//js
if (this.studyingEconomics) {
  while (supply > demand)    { buy(); }
  while (!(supply > demand)) { sell();}
}

//coffee
if this.studyingEconomics
  buy()  while supply > demand
  sell() until supply > demand


//js 
var num = 6;
result = (function() {
  var _results;
  _results = [];
  while(num -= 1) {_result.push(""+ num + "littile monkeys");}
  return _results;
})();

//coffee
num = 6
result = while num -= 1
  "#{num} little monkeys, jumping on the bed. One fell out and bumped his head."

```

#### Range

```
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9] #var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];

start = numbers[0..2] #var start = numbers.slice(0,3);

middle = numbers[3...-2] #var middle = numbers.slice(3,-2);

end = numbers[-2..]  #var end = numbers.slice(-2);

copy = numbers[..]   #var copy = numbers.slice(0);
```


# 浏览器对象

#### web函数

- window
- history

```
	history.go(-2)
	history.go(3)
```

- location

```
	location.replace(“http://www.baidu.com”);
	location.href=“myPage.html"
```

- navigator
- screen
- document
- datetime

```
	var time = new Date();
	time.toUTCString();
	time.toLocaleString();
	time.getTimezoneOffset();
	time.toLocaleTimeString();
	time.toTimeString();
	time.toLocaleDateString();
	time.toDAteString();
```


#### Dom函数



#### lambda函数、匿名函数
$(document).ready(function() {});





#### call方式
function changeColor(color){
	this.style.color = color;
}
changeColor(“white”);	//= window.changeColor;  this == window

var main = document.getElementById(“main”);
changeColor.call(main, “black”);		//=main.changeColor(); this == main


#### 面向对象
function Lecture(name, teacher){
	this.name = name;
	this.teacher = teacher;
}
Lecture.prototype.display = function(){};





//1
var obj = new Object();
obj.val = 5;

//2
function User(name){ this.name = name;}
var me = new User(“awd”);

//3
function User(){}
var me = new User();
var you = new me.constructor();



#### 继承
User.property = new Person();


#### 命名空间
//创建默认全局命名空间
var YAHOO = {};
//设置子命名空间
YAHOO.util = {};

//创建最终命名空间
YAHOO.util.Event = {
	addEventListener: function() {}
};

//调用函数
YAHOO.util.Event.addEventListener();
