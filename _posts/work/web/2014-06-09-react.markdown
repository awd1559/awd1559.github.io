---
layout:     post
title:      "react"
subtitle:   " \"javascript react\""
date:       2014-06-09 12:00:00
author:     "awd"
header-img: "img/post-bg-2015.jpg"
tags:
    - web
---

# basic useage 

```
<script src="react.js"></script>
<script src="react-dom.js"></script>
<script src="browser.min.js"></script>
<script type="text/babel">
  var App = React.createClass({
    getInitialState: function () {
      return { count: 0 };
    },
    handleClick: function () {
      this.setState({
        count: this.state.count + 1,
      });
    },
    render: function () {
      return (
        <button onClick={this.handleClick}>
          clicks: {this.state.count}
        </button>
      );
    }
  });
  ReactDOM.render(
    <App />, document.getElementById('container')
  );
</script>
```

# harmony usage
```
<script src="react.js"></script>
<script src="react-dom.js"></script>
<script src="browser.min.js"></script>
<script type="text/babel">
  class ExampleApplication extends React.Component {
    render() {
      var elapsed = Math.round(this.props.elapsed  / 100);
      var seconds = elapsed / 10 + (elapsed % 10 ? '' : '.0' );
      var message = `React has been successfully running for ${seconds} seconds.`;

      return <p>{message}</p>;
    }
  }
  var start = new Date().getTime();
  setInterval(() => {
    ReactDOM.render(
      <ExampleApplication elapsed={new Date().getTime() - start} />,
      document.getElementById('container')
    );
  }, 50);
</script>
```

# commonjs

```
//package.json

"dependencies": {
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-react": "^6.5.0",
    "babelify": "^7.3.0",
    "browserify": "^13.0.0",
    "react": "^15.0.2",
    "react-dom": "^15.0.2",
    "watchify": "^3.7.0"
  },
"scripts": {
    "build": "browserify ./index.js -t babelify -o bundle.js",
    "start": "watchify ./index.js -v -t babelify -o bundle.js"
  }
```

```
'use strict';

var React = require('react');
var ReactDOM = require('react-dom');

var App = React.createClass({
    getInitialState: function() {
        return { count: 0 };
    },
    handleClick: function() {
        this.setState({count: this.state.count + 1});
    },
    render: function() {
        return <button onClick={this.handleClick}>
                clicks: {this.state.count} 
            </button>;
    }
});

ReactDOM.render(<App />, document.getElementById('container'));
```

```
//.babelrc
{
  "presets": ["react", "es2015"]
}


<script src="bundle.js"></script>
```


# precompile
```
npm install -g babel-cli
npm install babel-preset-react
babel index.js --presets react --out-dir=build
```

```
//index.js

var App = React.createClass({
  getInitialState: function() {
    return { count: 0 };
  },
  handleClick: function() {
    this.setState({count: this.state.count + 1});
  },
  render: function() {
    return <button onClick={this.handleClick}>
            clicks: {this.state.count} 
            </button>;
  }
});

ReactDOM.render(<App />, document.getElementById('container'));

```

```
<script src="build/react.js"></script>
<script src="build/react-dom.js"></script>
<script src="build/index.js"></script>
```







