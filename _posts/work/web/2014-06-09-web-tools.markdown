---
layout:     post
title:      "tools for web dev"
subtitle:   " \"tools\""
date:       2014-06-09 12:00:00
author:     "awd"
header-img: "img/post-bg-2015.jpg"
tags:
    - web
---
# [yeoman](http://yeoman.io)
framework tool for web dev

#### install
```
npm install -g yo
#yo depends on bower, grunt, gulp
npm install -g bower grunt-cli gulp
```

#### generators
```
#install generator
npm install -g generator-webapp
npm install -g generator-angular
npm install -g generator-gulp-webapp
```

[generators](http://yeoman.io/generators/)
- gulp-angular
- gulp-webapp
- mobile
- webapp
- angular
- angular-fullstack
- react-fullstack


#### usage
```
#bootstrap, sass, modernizr
yo webapp  #use grunt
yo gulp-webapp  #use gulp

#sass, bootstrap, grunt
yo angular
yo angular —coffee
yo angular:controller myController
yo angular:directive myDirective
yo angular:filter myFilter
yo angular:service myService
```

# [npm](https://www.npmjs.com)

nodejs package manage

#### install
nodejs.pkg install nodejs & npm

#### usage
```
npm -l #display the npm command full usage
npm <cmd> -h #display the npm <cmd> help info

npm install [package] #install package to directory<node_modules>
npm update [package]
npm uninstall [package]<version>
npm view [package]

npm publish <tagball>
npm publish <folder>

npm start
npm stop

npm list #list package in directory: node_modules
npm version
```

#### package.json
```
npm init #create a simple package.json
npm install #install dependencies in package.json
npm start #start start command in package.json
```

```
{
	"name":"",
	"version": "1.0.0",
	"description": "",
	"main": "app.js"
	... ...
}
```

|name        | description or sample value                 |
| ---------- | ------------------------------------------- |
|name        |the name of this npm package                 |
|version     |version                                      |
|description |description                                  |
|main        |main javascript file                         |
|keyword     |["Node.js","AngularJS",]                     |
|homepage    |"https://github.com"                         |
|engines     |{"node": ">=0.10.x"}                         |
|repository  |{"type": "git","url": "https://*.git"}       |
|dependencies|{"redis": "~0.10.x","nodemailer": ">=0.6.x",}|
|scripts     |{"start": "node app.js"}                     |



# [Bower](http://bower.io/)
package manager for web frontend module

#### install 
```
npm install -g bower #install or update the latest bower
```

#### usage
```
bower install bootstrap #download bootstrap to directory: bower_components

bower search <package>
bower install <package>
bower uninstall <package>
bower update <package>
bower list        #list package hierarchy in directory: bower_components

bower help
bower init        #create a simple bower.json
```
[packages](http://bower.io/search/)

#### bower.json
```
bower init #create a simple bower.json
bower install #install dependencies in bower.json
```

# 比较npm、bower

#### npm 
- 支持 commonJS
- 针对node模块管理
- 树状依赖

#### bower
- 前端模块管理，扁平依赖
- yeomen使用bower
- 会消失的


# [gulp](http://gulpjs.com/)
[中文](http://www.gulpjs.com.cn/)

#### install
```
npm -g install gulp
npm -g install gulp-cli
#install to directory: node_modules/gulp
npm install gulp

npm init
npm install --save-dev gulp	#save "devDependencies" in file package.json
```

#### gulpfile.js
```
var gulp = require('gulp');

gulp.task('default', function() {
  // place code for your default task here
});
gulp.task('styles', ['default'], function() {  
  return gulp.src('src/styles/main.scss')
    .pipe(sass({ style: 'expanded' }))
    .pipe(autoprefixer('last 2 version', 'safari 5', 'ie 8', 'ie 9', 'opera 12.1', 'ios 6', 'android 4'))
    .pipe(gulp.dest('dist/assets/css'))
    .pipe(rename({suffix: '.min'}))
    .pipe(minifycss())
    .pipe(gulp.dest('dist/assets/css'))
    .pipe(notify({ message: 'Styles task complete' }));
});

```

run the task

>gulp           #run default task
>gulp --task    #list task hierarchy


#### [plugin](http://gulpjs.com/plugins/)
编译sass	gulp-ruby-sass
Autoprefix:	gulp-autoprefixer
压缩css	gulp-minify-css
JSHint		gulp-jshint
拼接		gulp-concat
丑化		gulp-uglify
图片压缩	gulp-imagemin
live reload	gulp-livereload
		gulp-cache		只有修改过的图片会进行压缩
		gulp-notify
		gulp-sourcemaps


# [grunt](http://www.gruntjs.net)

#### install
```
npm install -g grunt-cli
npm install -g grunt

npm install --save-dev grunt 
```


#### Gruntfile
Gruntfile.js or Gruntfile.coffee

```
'use strict';
module.exports = function(grunt) {
  grunt.initConfig({
    clean: {
      src: ['dist']
    },
    uglify: {
      options: {
        banner: '<%= banner %>'
      },
      dist: {
        src: '<%= concat.dist.dest %>',dest: 'dist/ba-<%= pkg.name %>.min.js'
      },
    }
  })
}
```

到项目grunt项目的根目录：
npm install  //安装依赖项目， 根据package.json(必须有内容)
grunt
grunt serve



# [composer](https://getcomposer.org)

for php 

#### install & update

```
mv composer.phar /usr/local/bin/composer
chmod a+x composer

#update composer 
/usr/local/bin/composer self-update 
```

```
#install bootstrap
composer require "twbs/bootstrap"   

#global install laravel installer 
composer global require "laravel/installer" 

#install packages in composer.json
composer install
```

#### composer.json
[schema](http://docs.phpcomposer.com/04-schema.html)

```
{
  "name":"",
  "description": "",
  "keywords":"",
  "license":"",
  "type":"",
  "require":{
    "php": ">=5.5.9",
    "laravel/framework": "5.2.*"
  },
  "require-dev":{},
  "autoload":{}
}
```

|------------|-----------------------|
|require     |needed composer package|
|require-dev |                       |
|autoload    |                       |
|autoload-dev|                       |
|scripts     |plugin scripts         |
|config      |composer config        |





# Database

#### Mysql

```
brew install mysql
mysql.server start
```

#### mongol

```
mongod    //start mongo server
mongo   //this is a javascript application, can use js in it
```

mongodb :27017
use mongoldb: a good no sql database
baidu、sina、ali是否支持mongod


#### redis
redis  : 6379
  memcache in memory
  单进程
  丰富的数据结构
  单个缓存 > 1M

#### memcache
memcache 
  单个缓存 1M


#### mongoid
mongoid
rails 通过mongoid
rails new mayor —skip-active-record
gem 'mongoid'
rails g mongoid:config




# web代码规范
使用两个空格，不用tab
嵌套元素应该缩进
属性全部使用双引号，不用单引号
自闭合标签, 使用<hr>, 不用<hr/>
不省略结束标签: </li>
IE兼容模式: <meta http-equiv="X-UA-Compatible" content="IE=Edge">
字符编码： <meta charset="UTF-8">

```
<!doctype html>
<html lang="zh-CN">
	<head>
	  <title></title>
	  <meta charset="UTF-8">
	  <meta http-equiv="X-UA-Compatible" content="IE=Edge">
	  <link rel="stylesheet" href="">
	  <style>
	    /* ... */
	  </style>
	  <script src="code.js"></script>
	</head>
	<body></body>
</html>
```



# 开源建站程序

#### 论坛系统
- Discuz		
- phpWind	
- BBSwax	
- 动网论坛	
- LeedBBS

#### CMS系统
- 帝国	
- 动易	
- DedeCMS	
- 科讯	
- phpcms

#### 博客系统
- emlob		
- PJblog		
- z-blog		
- Wordpress	
- Textpattern

#### 网店系统
- ECShop	
- shopEX	
- iWebShop	
- HiShop	
- PHP商场系统

#### 影音
- 天空电影SKYUC	
- 马克斯CMS	
- 鼎太播客	
- 云网影视	
- ADN视频收藏

#### SNS
- 记事狗		
- thinkSNS	
- iwebsns	
- Spacebuilder	
- UCenter home

#### 企业网站
- 深喉咙php	
- 易通CMSeasy		
- ESPCMS	
- SiteDynamic	
- 凡诺

#### 团购
- 最土	
- 天天	
- 手拉手	
- 美团	
- Lht蓝海豚

#### 移动框架
- appcan
- phonegap
- jqueryMobile
- Sencha
